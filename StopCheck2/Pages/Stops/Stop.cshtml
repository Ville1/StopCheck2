@page
@model StopCheck2.Pages.Stops.StopModel
@using StopCheck2.Utils;
@using StopCheck2.Data.DB;
@using StopCheck2.Data.DB.Model;

@Html.AntiForgeryToken()
@{
    ViewData[Constants.TITLE_KEY] = "Stop";
    User user = SessionHelper.GetCurrentUser(HttpContext);
    ViewData[Constants.USER_KEY] = user;

    Data.Stop stop = null;
    if (Request.Query.ContainsKey("id")) {
        stop = ApiHelper.Api.GetStop(Request.Query["id"]);
    }
    if (stop == null) {
        Response.Redirect(UrlHelper.ERROR_PAGE);
    } else {
        if (Request.Method == "POST" && user != null) {
            string bookmarkName = Request.Form["bookmarkName"];
            Bookmark bookmark = Database.Bookmarks.GetAll().Result.Where(x => x.Owner.Id == user.Id).FirstOrDefault(x => x.StopId == stop.Id);
            if(bookmark != null) {
                //Delete bookmark
                bool success = Database.Bookmarks.Delete(bookmark.Id).Result;
            } else {
                //Create bookmark
                bookmarkName = string.IsNullOrEmpty(bookmarkName) ? stop.Name : bookmarkName;
                bookmark = Database.Bookmarks.Save(new Bookmark() {
                    Name = bookmarkName,
                    StopId = stop.Id,
                    OwnerReference = Database.Users.GetReference(user).Result,
                    Created = DateTime.Now.ToUniversalTime(),
                    Updated = DateTime.Now.ToUniversalTime()
                }).Result;
            }
        }

        <h1>@stop.Name</h1>
        <div class="row">
            <div class="col-12 col-sm-6 col-md-4 col-lg-4 col-xl-4">
                <table class="table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">
                                Headsign
                            </th>
                            <th scope="col">
                                Arrives
                            </th>
                            <th scope="col">
                                Departs
                            </th>
                        </tr>
                    </thead>
                    <tbody id="table-body">
                    </tbody>
                </table>
            </div>
        </div>
        <button id="refresh-button" class="btn btn-primary" type="button">Refresh</button>

        @if (user != null) {
            List<Bookmark> bookmarks = Database.Bookmarks.GetAll().Result.Where(x => x.Owner.Id == user.Id).ToList();
            bool bookmarksExists = bookmarks.Exists(x => x.StopId == stop.Id);
            <form method="POST" action="">
                <table>
                    <tr>
                        <td>
                            <input id="BookmarkButton" class="btn @(bookmarksExists ? "btn-warning" : "btn-primary")" type="submit" value="@(bookmarksExists ? "Delete bookmark" : "Add bookmark")" />
                        </td>
                        <td>
                            @if (!bookmarksExists) {
                                <input id="BookmarkNameTextBox" name="bookmarkName" class="form-control" type="text" value="@stop.Name" />
                            }
                        </td>
                    </tr>
                </table>
            </form>
        }

        <script type="text/javascript">
            $(document).ready(function () {
                var refresh = function () {
                    $.ajax({
                        url: '@UrlHelper.ParseAjaxUrl(Request)',
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader('@Constants.ANTIFORGERY_TOKEN_NAME', $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        data: JSON.stringify({
                            id: '@stop.Id'
                        }),
                        contentType: 'application/json',
                        type: 'post',
                        dataType: 'json',
                        success: function (data) {
                            var tableBody = $('#table-body');
                            $('.departure-row').remove();
                            data.departures.forEach(function (item, index) {
                                tableBody.append(
                                    '<tr class="departure-row">' +
                                        '<td>' +
                                            item.headsign +
                                        '</td>' +
                                        '<td>' +
                                            item.arrival.realtime +
                                        '</td>' +
                                        '<td>' +
                                            item.departure.realtime +
                                        '</td>' +
                                    '</tr>'
                                );
                            });
                        },
                        error: function (error) {
                            console.log(error.responseText);
                        }
                    });
                }
                refresh();
                $('#refresh-button').on('click', refresh);
            });
        </script>
    }
}
